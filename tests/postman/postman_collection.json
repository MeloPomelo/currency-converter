{
	"info": {
		"_postman_id": "53a7b28f-a6d7-4941-874c-1bfc017eda66",
		"name": "Currency Converter API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18027903"
	},
	"item": [
		{
			"name": "Set currency data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"currencies\": [\n    {\n      \"char_code\": \"USD\",\n      \"value\": \"70\"\n    },\n    {\n      \"char_code\": \"EUR\",\n      \"value\": \"80\"\n    },\n    {\n      \"char_code\": \"CNY\",\n      \"value\": \"10\"\n    }\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/database?merge=0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"database"
					],
					"query": [
						{
							"key": "merge",
							"value": "0",
							"description": "(Required) Specifies the merging behavior for adding new currency data"
						}
					]
				},
				"description": "The handle_database method is used to manually set currency data in the database.                     If `merge` is set to 0, the old data is invalidated. If `merge` is set to 1, the new                     data will overwrite the old data, but the old data remains relevant if not erased.                     Currency code should adhere to the ISO 4217 standard"
			},
			"response": [
				{
					"name": "Untitled Response",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"currencies\": [\n    {\n      \"char_code\": \"<string>\",\n      \"value\": \"<float>\"\n    },\n    {\n      \"char_code\": \"<string>\",\n      \"value\": \"<float>\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/database?merge=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"database"
							],
							"query": [
								{
									"key": "merge",
									"value": "<integer>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"currencies\": [\n    {\n      \"char_code\": \"<string>\",\n      \"value\": \"<float>\"\n    },\n    {\n      \"char_code\": \"<string>\",\n      \"value\": \"<float>\"\n    }\n  ],\n  \"merge\": \"<integer>\"\n}"
				},
				{
					"name": "Validation error",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"currencies\": [\n    {\n      \"char_code\": \"<string>\",\n      \"value\": \"<float>\"\n    },\n    {\n      \"char_code\": \"<string>\",\n      \"value\": \"<float>\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/database?merge=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"database"
							],
							"query": [
								{
									"key": "merge",
									"value": "<integer>"
								}
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Converts currency to RUB",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/convert?from=USD&to=RUB&amount=42",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"convert"
					],
					"query": [
						{
							"key": "from",
							"value": "USD",
							"description": "(Required) The currency code of the amount to be converted from (ISO 4217)"
						},
						{
							"key": "to",
							"value": "RUB",
							"description": "(Required) The currency code to convert the amount to (ISO 4217)"
						},
						{
							"key": "amount",
							"value": "42",
							"description": "(Required) The amount to be converted"
						}
					]
				},
				"description": "Converts the specified amount of tre one currency to another"
			},
			"response": [
				{
					"name": "Untitled Response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/convert?from_currency=<string>&to_currency=<string>&amount=<float>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"convert"
							],
							"query": [
								{
									"key": "from_currency",
									"value": "<string>"
								},
								{
									"key": "to_currency",
									"value": "<string>"
								},
								{
									"key": "amount",
									"value": "<float>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"amount\": \"<float>\",\n  \"from_currency\": \"<string>\",\n  \"to_currency\": \"<string>\",\n  \"result\": \"<float>\"\n}"
				},
				{
					"name": "Not found",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/convert?from_currency=<string>&to_currency=<string>&amount=<float>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"convert"
							],
							"query": [
								{
									"key": "from_currency",
									"value": "<string>"
								},
								{
									"key": "to_currency",
									"value": "<string>"
								},
								{
									"key": "amount",
									"value": "<float>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Validation error",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/convert?from_currency=<string>&to_currency=<string>&amount=<float>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"convert"
							],
							"query": [
								{
									"key": "from_currency",
									"value": "<string>"
								},
								{
									"key": "to_currency",
									"value": "<string>"
								},
								{
									"key": "amount",
									"value": "<float>"
								}
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Converts currency from RUB",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/convert?from=RUB&to=CNY&amount=34000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"convert"
					],
					"query": [
						{
							"key": "from",
							"value": "RUB",
							"description": "(Required) The currency code of the amount to be converted from (ISO 4217)"
						},
						{
							"key": "to",
							"value": "CNY",
							"description": "(Required) The currency code to convert the amount to (ISO 4217)"
						},
						{
							"key": "amount",
							"value": "34000",
							"description": "(Required) The amount to be converted"
						}
					]
				},
				"description": "Converts the specified amount of tre one currency to another"
			},
			"response": [
				{
					"name": "Untitled Response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/convert?from_currency=<string>&to_currency=<string>&amount=<float>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"convert"
							],
							"query": [
								{
									"key": "from_currency",
									"value": "<string>"
								},
								{
									"key": "to_currency",
									"value": "<string>"
								},
								{
									"key": "amount",
									"value": "<float>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"amount\": \"<float>\",\n  \"from_currency\": \"<string>\",\n  \"to_currency\": \"<string>\",\n  \"result\": \"<float>\"\n}"
				},
				{
					"name": "Not found",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/convert?from_currency=<string>&to_currency=<string>&amount=<float>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"convert"
							],
							"query": [
								{
									"key": "from_currency",
									"value": "<string>"
								},
								{
									"key": "to_currency",
									"value": "<string>"
								},
								{
									"key": "amount",
									"value": "<float>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Validation error",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/convert?from_currency=<string>&to_currency=<string>&amount=<float>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"convert"
							],
							"query": [
								{
									"key": "from_currency",
									"value": "<string>"
								},
								{
									"key": "to_currency",
									"value": "<string>"
								},
								{
									"key": "amount",
									"value": "<float>"
								}
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Set currency data merge=1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"currencies\": [\n    {\n      \"char_code\": \"GBP\",\n      \"value\": \"100\"\n    }\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/database?merge=1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"database"
					],
					"query": [
						{
							"key": "merge",
							"value": "1",
							"description": "(Required) Specifies the merging behavior for adding new currency data"
						}
					]
				},
				"description": "The handle_database method is used to manually set currency data in the database.                     If `merge` is set to 0, the old data is invalidated. If `merge` is set to 1, the new                     data will overwrite the old data, but the old data remains relevant if not erased.                     Currency code should adhere to the ISO 4217 standard"
			},
			"response": [
				{
					"name": "Untitled Response",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"currencies\": [\n    {\n      \"char_code\": \"<string>\",\n      \"value\": \"<float>\"\n    },\n    {\n      \"char_code\": \"<string>\",\n      \"value\": \"<float>\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/database?merge=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"database"
							],
							"query": [
								{
									"key": "merge",
									"value": "<integer>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"currencies\": [\n    {\n      \"char_code\": \"<string>\",\n      \"value\": \"<float>\"\n    },\n    {\n      \"char_code\": \"<string>\",\n      \"value\": \"<float>\"\n    }\n  ],\n  \"merge\": \"<integer>\"\n}"
				},
				{
					"name": "Validation error",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"currencies\": [\n    {\n      \"char_code\": \"<string>\",\n      \"value\": \"<float>\"\n    },\n    {\n      \"char_code\": \"<string>\",\n      \"value\": \"<float>\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/database?merge=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"database"
							],
							"query": [
								{
									"key": "merge",
									"value": "<integer>"
								}
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Converts currency with new and old data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/convert?from=EUR&to=GBP&amount=5800",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"convert"
					],
					"query": [
						{
							"key": "from",
							"value": "EUR",
							"description": "(Required) The currency code of the amount to be converted from (ISO 4217)"
						},
						{
							"key": "to",
							"value": "GBP",
							"description": "(Required) The currency code to convert the amount to (ISO 4217)"
						},
						{
							"key": "amount",
							"value": "5800",
							"description": "(Required) The amount to be converted"
						}
					]
				},
				"description": "Converts the specified amount of tre one currency to another"
			},
			"response": [
				{
					"name": "Untitled Response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/convert?from_currency=<string>&to_currency=<string>&amount=<float>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"convert"
							],
							"query": [
								{
									"key": "from_currency",
									"value": "<string>"
								},
								{
									"key": "to_currency",
									"value": "<string>"
								},
								{
									"key": "amount",
									"value": "<float>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"amount\": \"<float>\",\n  \"from_currency\": \"<string>\",\n  \"to_currency\": \"<string>\",\n  \"result\": \"<float>\"\n}"
				},
				{
					"name": "Not found",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/convert?from_currency=<string>&to_currency=<string>&amount=<float>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"convert"
							],
							"query": [
								{
									"key": "from_currency",
									"value": "<string>"
								},
								{
									"key": "to_currency",
									"value": "<string>"
								},
								{
									"key": "amount",
									"value": "<float>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Validation error",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/convert?from_currency=<string>&to_currency=<string>&amount=<float>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"convert"
							],
							"query": [
								{
									"key": "from_currency",
									"value": "<string>"
								},
								{
									"key": "to_currency",
									"value": "<string>"
								},
								{
									"key": "amount",
									"value": "<float>"
								}
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Set currency data merge=0",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"currencies\": [\n    {\n      \"char_code\": \"KZT\",\n      \"value\": \"0.20\"\n    }\n  ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/database?merge=0",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"database"
					],
					"query": [
						{
							"key": "merge",
							"value": "0",
							"description": "(Required) Specifies the merging behavior for adding new currency data"
						}
					]
				},
				"description": "The handle_database method is used to manually set currency data in the database.                     If `merge` is set to 0, the old data is invalidated. If `merge` is set to 1, the new                     data will overwrite the old data, but the old data remains relevant if not erased.                     Currency code should adhere to the ISO 4217 standard"
			},
			"response": [
				{
					"name": "Untitled Response",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"currencies\": [\n    {\n      \"char_code\": \"<string>\",\n      \"value\": \"<float>\"\n    },\n    {\n      \"char_code\": \"<string>\",\n      \"value\": \"<float>\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/database?merge=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"database"
							],
							"query": [
								{
									"key": "merge",
									"value": "<integer>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"currencies\": [\n    {\n      \"char_code\": \"<string>\",\n      \"value\": \"<float>\"\n    },\n    {\n      \"char_code\": \"<string>\",\n      \"value\": \"<float>\"\n    }\n  ],\n  \"merge\": \"<integer>\"\n}"
				},
				{
					"name": "Validation error",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"currencies\": [\n    {\n      \"char_code\": \"<string>\",\n      \"value\": \"<float>\"\n    },\n    {\n      \"char_code\": \"<string>\",\n      \"value\": \"<float>\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/database?merge=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"database"
							],
							"query": [
								{
									"key": "merge",
									"value": "<integer>"
								}
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Converts currency with non-existent data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/convert?from=EUR&to=GBP&amount=5800",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"convert"
					],
					"query": [
						{
							"key": "from",
							"value": "EUR",
							"description": "(Required) The currency code of the amount to be converted from (ISO 4217)"
						},
						{
							"key": "to",
							"value": "GBP",
							"description": "(Required) The currency code to convert the amount to (ISO 4217)"
						},
						{
							"key": "amount",
							"value": "5800",
							"description": "(Required) The amount to be converted"
						}
					]
				},
				"description": "Converts the specified amount of tre one currency to another"
			},
			"response": [
				{
					"name": "Untitled Response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/convert?from_currency=<string>&to_currency=<string>&amount=<float>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"convert"
							],
							"query": [
								{
									"key": "from_currency",
									"value": "<string>"
								},
								{
									"key": "to_currency",
									"value": "<string>"
								},
								{
									"key": "amount",
									"value": "<float>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"amount\": \"<float>\",\n  \"from_currency\": \"<string>\",\n  \"to_currency\": \"<string>\",\n  \"result\": \"<float>\"\n}"
				},
				{
					"name": "Not found",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/convert?from_currency=<string>&to_currency=<string>&amount=<float>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"convert"
							],
							"query": [
								{
									"key": "from_currency",
									"value": "<string>"
								},
								{
									"key": "to_currency",
									"value": "<string>"
								},
								{
									"key": "amount",
									"value": "<float>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Validation error",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/convert?from_currency=<string>&to_currency=<string>&amount=<float>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"convert"
							],
							"query": [
								{
									"key": "from_currency",
									"value": "<string>"
								},
								{
									"key": "to_currency",
									"value": "<string>"
								},
								{
									"key": "amount",
									"value": "<float>"
								}
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Converts currency with new data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/convert?from=RUB&to=KZT&amount=5800",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"convert"
					],
					"query": [
						{
							"key": "from",
							"value": "RUB",
							"description": "(Required) The currency code of the amount to be converted from (ISO 4217)"
						},
						{
							"key": "to",
							"value": "KZT",
							"description": "(Required) The currency code to convert the amount to (ISO 4217)"
						},
						{
							"key": "amount",
							"value": "5800",
							"description": "(Required) The amount to be converted"
						}
					]
				},
				"description": "Converts the specified amount of tre one currency to another"
			},
			"response": [
				{
					"name": "Untitled Response",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/convert?from_currency=<string>&to_currency=<string>&amount=<float>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"convert"
							],
							"query": [
								{
									"key": "from_currency",
									"value": "<string>"
								},
								{
									"key": "to_currency",
									"value": "<string>"
								},
								{
									"key": "amount",
									"value": "<float>"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"amount\": \"<float>\",\n  \"from_currency\": \"<string>\",\n  \"to_currency\": \"<string>\",\n  \"result\": \"<float>\"\n}"
				},
				{
					"name": "Not found",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/convert?from_currency=<string>&to_currency=<string>&amount=<float>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"convert"
							],
							"query": [
								{
									"key": "from_currency",
									"value": "<string>"
								},
								{
									"key": "to_currency",
									"value": "<string>"
								},
								{
									"key": "amount",
									"value": "<float>"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Validation error",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/convert?from_currency=<string>&to_currency=<string>&amount=<float>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"convert"
							],
							"query": [
								{
									"key": "from_currency",
									"value": "<string>"
								},
								{
									"key": "to_currency",
									"value": "<string>"
								},
								{
									"key": "amount",
									"value": "<float>"
								}
							]
						}
					},
					"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
					"code": 422,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}